---
kind: Secret
apiVersion: v1

metadata:
   name: mydb-secret
   namespace: myns
   labels:
      app.kubernetes.io/name: mydb-secret
      app.kubernetes.io/version: "v1"
      app.kubernetes.io/component: configuration
      app.kubernetes.io/part-of: mysuite

data:
   # echo -n changeit | base64 
   DB_PASSWORD: Y2hhbmdlaXQ=

---
kind: Deployment
apiVersion: apps/v1

metadata:
   name: myapp-deploy
   namespace: myns
   labels:
      app.kubernetes.io/name: myapp-deploy
      app.kubernetes.io/version: "v1"
      app.kubernetes.io/component: application
      app.kubernetes.io/part-of: mysuite

spec:
   replicas: 3
   selector:
      matchLabels:
         app.kubernetes.io/name: myapp-pod

   minReadySeconds: 10
   template:
      metadata:
         name: myapp-deploy
         labels:
            app.kubernetes.io/name: myapp-pod
      spec:
         containers:
         - name: myapp
           image: stackupiss/northwind-app:v1
           imagePullPolicy: Always
           env:
           - name: DB_HOST
             value: mydb-svc.myns.svc.cluster.local
           - name: DB_USER
             value: root
           - name: DB_PASSWORD
             valueFrom:
                secretKeyRef:
                   name: mydb-secret
                   key: DB_PASSWORD
           - name: INSTANCE_IP_ADDRESS
             valueFrom:
                fieldRef:
                   fieldPath: status.podIP
           ports:
           - name: app-port
             containerPort: 3000

           livenessProbe:
              periodSeconds: 60
              httpGet:
                 port: app-port
                 path: /health
           readinessProbe:
              periodSeconds: 60
              httpGet:
                 port: app-port
                 path: /ready
   strategy:
      type: RollingUpdate
      rollingUpdate:
         maxSurge: 1
         maxUnavailable: 1

---
kind: Service
apiVersion: v1

metadata:
   name: myapp-svc
   namespace: myns
   labels:
      app.kubernetes.io/name: mydb-svc
      app.kubernetes.io/version: "v1"
      app.kubernetes.io/component: database-service
      app.kubernetes.io/part-of: mysuite

spec:
   type: LoadBalancer
   selector:
      app.kubernetes.io/name: myapp-pod
   ports:
   - port: 80
     targetPort: app-port

